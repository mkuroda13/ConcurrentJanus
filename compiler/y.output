
state 0
	$accept: .prog $end 

	PROCEDURE  shift 3
	.  error

	prog  goto 1
	pmain  goto 2

state 1
	$accept:  prog.$end 

	$end  accept
	.  error


state 2
	prog:  pmain.procs 
	procs: .    (3)

	PROCEDURE  shift 6
	.  reduce 3 (src line 35)

	procs  goto 4
	proc  goto 5

state 3
	pmain:  PROCEDURE.MAIN LPR RPR $$4 mainblock 

	MAIN  shift 7
	.  error


state 4
	prog:  pmain procs.    (1)

	.  reduce 1 (src line 32)


state 5
	procs:  proc.procs 
	procs: .    (3)

	PROCEDURE  shift 6
	.  reduce 3 (src line 35)

	procs  goto 8
	proc  goto 5

state 6
	proc:  PROCEDURE.IDENT $$12 LPR argdecls RPR pblock 

	IDENT  shift 9
	.  error


state 7
	pmain:  PROCEDURE MAIN.LPR RPR $$4 mainblock 

	LPR  shift 10
	.  error


state 8
	procs:  proc procs.    (2)

	.  reduce 2 (src line 34)


state 9
	proc:  PROCEDURE IDENT.$$12 LPR argdecls RPR pblock 
	$$12: .    (12)

	.  reduce 12 (src line 84)

	$$12  goto 11

state 10
	pmain:  PROCEDURE MAIN LPR.RPR $$4 mainblock 

	RPR  shift 12
	.  error


state 11
	proc:  PROCEDURE IDENT $$12.LPR argdecls RPR pblock 

	LPR  shift 13
	.  error


state 12
	pmain:  PROCEDURE MAIN LPR RPR.$$4 mainblock 
	$$4: .    (4)

	.  reduce 4 (src line 37)

	$$4  goto 14

state 13
	proc:  PROCEDURE IDENT $$12 LPR.argdecls RPR pblock 
	argdecls: .    (18)

	INT  shift 17
	.  reduce 18 (src line 118)

	argdecls  goto 15
	argdecl  goto 16

state 14
	pmain:  PROCEDURE MAIN LPR RPR $$4.mainblock 

	LCB  shift 19
	.  error

	mainblock  goto 18

state 15
	proc:  PROCEDURE IDENT $$12 LPR argdecls.RPR pblock 

	RPR  shift 20
	.  error


state 16
	argdecls:  argdecl.argdeclmore 
	argdeclmore: .    (20)

	COMMA  shift 22
	.  reduce 20 (src line 122)

	argdeclmore  goto 21

state 17
	argdecl:  INT.IDENT 
	argdecl:  INT.IDENT LSB RSB 

	IDENT  shift 23
	.  error


state 18
	pmain:  PROCEDURE MAIN LPR RPR $$4 mainblock.    (5)

	.  reduce 5 (src line 46)


state 19
	mainblock:  LCB.$$6 globvardecls statements RCB 
	$$6: .    (6)

	.  reduce 6 (src line 54)

	$$6  goto 24

state 20
	proc:  PROCEDURE IDENT $$12 LPR argdecls RPR.pblock 

	LCB  shift 26
	.  error

	pblock  goto 25

state 21
	argdecls:  argdecl argdeclmore.    (17)

	.  reduce 17 (src line 117)


state 22
	argdeclmore:  COMMA.argdecl argdeclmore 

	INT  shift 17
	.  error

	argdecl  goto 27

state 23
	argdecl:  INT IDENT.    (21)
	argdecl:  INT IDENT.LSB RSB 

	LSB  shift 28
	.  reduce 21 (src line 124)


state 24
	mainblock:  LCB $$6.globvardecls statements RCB 
	globvardecls: .    (9)

	INT  shift 31
	.  reduce 9 (src line 69)

	globvardecls  goto 29
	globvardecl  goto 30

state 25
	proc:  PROCEDURE IDENT $$12 LPR argdecls RPR pblock.    (13)

	.  reduce 13 (src line 93)


state 26
	pblock:  LCB.$$14 statements $$15 RCB 
	$$14: .    (14)

	.  reduce 14 (src line 101)

	$$14  goto 32

state 27
	argdeclmore:  COMMA argdecl.argdeclmore 
	argdeclmore: .    (20)

	COMMA  shift 22
	.  reduce 20 (src line 122)

	argdeclmore  goto 33

state 28
	argdecl:  INT IDENT LSB.RSB 

	RSB  shift 34
	.  error


state 29
	mainblock:  LCB $$6 globvardecls.statements RCB 
	statements: .    (28)

	IDENT  shift 47
	LCB  shift 53
	IF  shift 49
	FROM  shift 50
	CALL  shift 51
	PAR  shift 52
	SKIP  shift 43
	P  shift 56
	V  shift 55
	.  reduce 28 (src line 155)

	arrentry  goto 48
	statements  goto 35
	block  goto 44
	local_block  goto 54
	statement  goto 36
	assign_statement  goto 37
	arrassign_statement  goto 38
	if_statement  goto 39
	loop_statement  goto 40
	call_statement  goto 41
	par_statement  goto 42
	v_statement  goto 45
	p_statement  goto 46

state 30
	globvardecls:  globvardecl.globvardecls 
	globvardecls: .    (9)

	INT  shift 31
	.  reduce 9 (src line 69)

	globvardecls  goto 57
	globvardecl  goto 30

state 31
	globvardecl:  INT.IDENT 
	globvardecl:  INT.IDENT LSB variable RSB 

	IDENT  shift 58
	.  error


state 32
	pblock:  LCB $$14.statements $$15 RCB 
	statements: .    (28)

	IDENT  shift 47
	LCB  shift 53
	IF  shift 49
	FROM  shift 50
	CALL  shift 51
	PAR  shift 52
	SKIP  shift 43
	P  shift 56
	V  shift 55
	.  reduce 28 (src line 155)

	arrentry  goto 48
	statements  goto 59
	block  goto 44
	local_block  goto 54
	statement  goto 36
	assign_statement  goto 37
	arrassign_statement  goto 38
	if_statement  goto 39
	loop_statement  goto 40
	call_statement  goto 41
	par_statement  goto 42
	v_statement  goto 45
	p_statement  goto 46

state 33
	argdeclmore:  COMMA argdecl argdeclmore.    (19)

	.  reduce 19 (src line 121)


state 34
	argdecl:  INT IDENT LSB RSB.    (22)

	.  reduce 22 (src line 130)


state 35
	mainblock:  LCB $$6 globvardecls statements.RCB 

	RCB  shift 60
	.  error


state 36
	statements:  statement.statements 
	statements: .    (28)

	IDENT  shift 47
	LCB  shift 53
	IF  shift 49
	FROM  shift 50
	CALL  shift 51
	PAR  shift 52
	SKIP  shift 43
	P  shift 56
	V  shift 55
	.  reduce 28 (src line 155)

	arrentry  goto 48
	statements  goto 61
	block  goto 44
	local_block  goto 54
	statement  goto 36
	assign_statement  goto 37
	arrassign_statement  goto 38
	if_statement  goto 39
	loop_statement  goto 40
	call_statement  goto 41
	par_statement  goto 42
	v_statement  goto 45
	p_statement  goto 46

state 37
	statement:  assign_statement.    (29)

	.  reduce 29 (src line 157)


state 38
	statement:  arrassign_statement.    (30)

	.  reduce 30 (src line 158)


state 39
	statement:  if_statement.    (31)

	.  reduce 31 (src line 159)


state 40
	statement:  loop_statement.    (32)

	.  reduce 32 (src line 160)


state 41
	statement:  call_statement.    (33)

	.  reduce 33 (src line 161)


state 42
	statement:  par_statement.    (34)

	.  reduce 34 (src line 162)


state 43
	statement:  SKIP.    (35)

	.  reduce 35 (src line 163)


state 44
	statement:  block.    (36)

	.  reduce 36 (src line 164)


state 45
	statement:  v_statement.    (37)

	.  reduce 37 (src line 165)


state 46
	statement:  p_statement.    (38)

	.  reduce 38 (src line 166)


state 47
	assign_statement:  IDENT.PLUS EQ $$39 expr 
	assign_statement:  IDENT.MINUS EQ $$41 expr 
	assign_statement:  IDENT.XOR EQ $$43 expr 
	arrentry:  IDENT.LSB reclab $$45 expr RSB 

	PLUS  shift 62
	MINUS  shift 63
	XOR  shift 64
	LSB  shift 65
	.  error


state 48
	arrassign_statement:  arrentry.PLUS EQ $$47 expr 
	arrassign_statement:  arrentry.MINUS EQ $$49 expr 
	arrassign_statement:  arrentry.XOR EQ $$51 expr 

	PLUS  shift 66
	MINUS  shift 67
	XOR  shift 68
	.  error


state 49
	if_statement:  IF.lab lab lab lab reclab reclab $$53 expr $$54 THEN statements $$55 ELSE statements $$56 FI expr 
	lab: .    (58)

	.  reduce 58 (src line 302)

	lab  goto 69

state 50
	loop_statement:  FROM.lab lab lab lab lab reclab reclab $$59 expr $$60 DO block $$61 LOOP block UNTIL $$62 expr 
	lab: .    (58)

	.  reduce 58 (src line 302)

	lab  goto 70

state 51
	call_statement:  CALL.IDENT reclab $$70 LPR args RPR 

	IDENT  shift 71
	.  error


state 52
	par_statement:  PAR.par_block par_more RAP 
	$$75: .    (75)

	.  reduce 75 (src line 431)

	par_block  goto 72
	$$75  goto 73

state 53
	block:  LCB.$$23 statements $$24 RCB 
	local_block:  LCB.$$64 LOCAL INT IDENT EQ reclab reclab $$65 expr $$66 statements DELOCAL INT IDENT EQ $$67 expr $$68 RCB 
	$$23: .    (23)
	$$64: .    (64)

	LOCAL  reduce 64 (src line 353)
	.  reduce 23 (src line 137)

	$$23  goto 74
	$$64  goto 75

state 54
	block:  local_block.    (26)

	.  reduce 26 (src line 152)


state 55
	v_statement:  V.IDENT 

	IDENT  shift 76
	.  error


state 56
	p_statement:  P.IDENT 

	IDENT  shift 77
	.  error


state 57
	globvardecls:  globvardecl globvardecls.    (8)

	.  reduce 8 (src line 68)


state 58
	globvardecl:  INT IDENT.    (10)
	globvardecl:  INT IDENT.LSB variable RSB 

	LSB  shift 78
	.  reduce 10 (src line 71)


state 59
	pblock:  LCB $$14 statements.$$15 RCB 
	$$15: .    (15)

	.  reduce 15 (src line 108)

	$$15  goto 79

state 60
	mainblock:  LCB $$6 globvardecls statements RCB.    (7)

	.  reduce 7 (src line 61)


state 61
	statements:  statement statements.    (27)

	.  reduce 27 (src line 154)


state 62
	assign_statement:  IDENT PLUS.EQ $$39 expr 

	EQ  shift 80
	.  error


state 63
	assign_statement:  IDENT MINUS.EQ $$41 expr 

	EQ  shift 81
	.  error


state 64
	assign_statement:  IDENT XOR.EQ $$43 expr 

	EQ  shift 82
	.  error


state 65
	arrentry:  IDENT LSB.reclab $$45 expr RSB 
	reclab: .    (84)

	.  reduce 84 (src line 478)

	reclab  goto 83

state 66
	arrassign_statement:  arrentry PLUS.EQ $$47 expr 

	EQ  shift 84
	.  error


state 67
	arrassign_statement:  arrentry MINUS.EQ $$49 expr 

	EQ  shift 85
	.  error


state 68
	arrassign_statement:  arrentry XOR.EQ $$51 expr 

	EQ  shift 86
	.  error


state 69
	if_statement:  IF lab.lab lab lab reclab reclab $$53 expr $$54 THEN statements $$55 ELSE statements $$56 FI expr 
	lab: .    (58)

	.  reduce 58 (src line 302)

	lab  goto 87

state 70
	loop_statement:  FROM lab.lab lab lab lab reclab reclab $$59 expr $$60 DO block $$61 LOOP block UNTIL $$62 expr 
	lab: .    (58)

	.  reduce 58 (src line 302)

	lab  goto 88

state 71
	call_statement:  CALL IDENT.reclab $$70 LPR args RPR 
	reclab: .    (84)

	.  reduce 84 (src line 478)

	reclab  goto 89

state 72
	par_statement:  PAR par_block.par_more RAP 
	par_more: .    (74)

	COMMA  shift 91
	.  reduce 74 (src line 428)

	par_more  goto 90

state 73
	par_block:  $$75.block 

	LCB  shift 53
	.  error

	block  goto 92
	local_block  goto 54

state 74
	block:  LCB $$23.statements $$24 RCB 
	statements: .    (28)

	IDENT  shift 47
	LCB  shift 53
	IF  shift 49
	FROM  shift 50
	CALL  shift 51
	PAR  shift 52
	SKIP  shift 43
	P  shift 56
	V  shift 55
	.  reduce 28 (src line 155)

	arrentry  goto 48
	statements  goto 93
	block  goto 44
	local_block  goto 54
	statement  goto 36
	assign_statement  goto 37
	arrassign_statement  goto 38
	if_statement  goto 39
	loop_statement  goto 40
	call_statement  goto 41
	par_statement  goto 42
	v_statement  goto 45
	p_statement  goto 46

state 75
	local_block:  LCB $$64.LOCAL INT IDENT EQ reclab reclab $$65 expr $$66 statements DELOCAL INT IDENT EQ $$67 expr $$68 RCB 

	LOCAL  shift 94
	.  error


state 76
	v_statement:  V IDENT.    (82)

	.  reduce 82 (src line 465)


state 77
	p_statement:  P IDENT.    (83)

	.  reduce 83 (src line 471)


state 78
	globvardecl:  INT IDENT LSB.variable RSB 

	NUM  shift 96
	IDENT  shift 97
	.  error

	variable  goto 95

state 79
	pblock:  LCB $$14 statements $$15.RCB 

	RCB  shift 98
	.  error


state 80
	assign_statement:  IDENT PLUS EQ.$$39 expr 
	$$39: .    (39)

	.  reduce 39 (src line 168)

	$$39  goto 99

state 81
	assign_statement:  IDENT MINUS EQ.$$41 expr 
	$$41: .    (41)

	.  reduce 41 (src line 181)

	$$41  goto 100

state 82
	assign_statement:  IDENT XOR EQ.$$43 expr 
	$$43: .    (43)

	.  reduce 43 (src line 194)

	$$43  goto 101

state 83
	arrentry:  IDENT LSB reclab.$$45 expr RSB 
	$$45: .    (45)

	.  reduce 45 (src line 207)

	$$45  goto 102

state 84
	arrassign_statement:  arrentry PLUS EQ.$$47 expr 
	$$47: .    (47)

	.  reduce 47 (src line 220)

	$$47  goto 103

state 85
	arrassign_statement:  arrentry MINUS EQ.$$49 expr 
	$$49: .    (49)

	.  reduce 49 (src line 233)

	$$49  goto 104

state 86
	arrassign_statement:  arrentry XOR EQ.$$51 expr 
	$$51: .    (51)

	.  reduce 51 (src line 246)

	$$51  goto 105

state 87
	if_statement:  IF lab lab.lab lab reclab reclab $$53 expr $$54 THEN statements $$55 ELSE statements $$56 FI expr 
	lab: .    (58)

	.  reduce 58 (src line 302)

	lab  goto 106

state 88
	loop_statement:  FROM lab lab.lab lab lab reclab reclab $$59 expr $$60 DO block $$61 LOOP block UNTIL $$62 expr 
	lab: .    (58)

	.  reduce 58 (src line 302)

	lab  goto 107

state 89
	call_statement:  CALL IDENT reclab.$$70 LPR args RPR 
	$$70: .    (70)

	.  reduce 70 (src line 394)

	$$70  goto 108

state 90
	par_statement:  PAR par_block par_more.RAP 

	RAP  shift 109
	.  error


state 91
	par_more:  COMMA.par_block par_more 
	$$75: .    (75)

	.  reduce 75 (src line 431)

	par_block  goto 110
	$$75  goto 73

state 92
	par_block:  $$75 block.    (76)

	.  reduce 76 (src line 441)


state 93
	block:  LCB $$23 statements.$$24 RCB 
	$$24: .    (24)

	.  reduce 24 (src line 144)

	$$24  goto 111

state 94
	local_block:  LCB $$64 LOCAL.INT IDENT EQ reclab reclab $$65 expr $$66 statements DELOCAL INT IDENT EQ $$67 expr $$68 RCB 

	INT  shift 112
	.  error


state 95
	globvardecl:  INT IDENT LSB variable.RSB 

	RSB  shift 113
	.  error


state 96
	variable:  NUM.    (108)

	.  reduce 108 (src line 642)


state 97
	variable:  IDENT.    (109)
	variable:  IDENT.LSB expr RSB 

	LSB  shift 114
	.  reduce 109 (src line 648)


state 98
	pblock:  LCB $$14 statements $$15 RCB.    (16)

	.  reduce 16 (src line 115)


state 99
	assign_statement:  IDENT PLUS EQ $$39.expr 

	NUM  shift 96
	IDENT  shift 97
	LPR  shift 122
	.  error

	variable  goto 121
	expr  goto 115
	expr2  goto 116
	expr3  goto 117
	expr4  goto 118
	expr5  goto 119
	expr6  goto 120

state 100
	assign_statement:  IDENT MINUS EQ $$41.expr 

	NUM  shift 96
	IDENT  shift 97
	LPR  shift 122
	.  error

	variable  goto 121
	expr  goto 123
	expr2  goto 116
	expr3  goto 117
	expr4  goto 118
	expr5  goto 119
	expr6  goto 120

state 101
	assign_statement:  IDENT XOR EQ $$43.expr 

	NUM  shift 96
	IDENT  shift 97
	LPR  shift 122
	.  error

	variable  goto 121
	expr  goto 124
	expr2  goto 116
	expr3  goto 117
	expr4  goto 118
	expr5  goto 119
	expr6  goto 120

state 102
	arrentry:  IDENT LSB reclab $$45.expr RSB 

	NUM  shift 96
	IDENT  shift 97
	LPR  shift 122
	.  error

	variable  goto 121
	expr  goto 125
	expr2  goto 116
	expr3  goto 117
	expr4  goto 118
	expr5  goto 119
	expr6  goto 120

state 103
	arrassign_statement:  arrentry PLUS EQ $$47.expr 

	NUM  shift 96
	IDENT  shift 97
	LPR  shift 122
	.  error

	variable  goto 121
	expr  goto 126
	expr2  goto 116
	expr3  goto 117
	expr4  goto 118
	expr5  goto 119
	expr6  goto 120

state 104
	arrassign_statement:  arrentry MINUS EQ $$49.expr 

	NUM  shift 96
	IDENT  shift 97
	LPR  shift 122
	.  error

	variable  goto 121
	expr  goto 127
	expr2  goto 116
	expr3  goto 117
	expr4  goto 118
	expr5  goto 119
	expr6  goto 120

state 105
	arrassign_statement:  arrentry XOR EQ $$51.expr 

	NUM  shift 96
	IDENT  shift 97
	LPR  shift 122
	.  error

	variable  goto 121
	expr  goto 128
	expr2  goto 116
	expr3  goto 117
	expr4  goto 118
	expr5  goto 119
	expr6  goto 120

state 106
	if_statement:  IF lab lab lab.lab reclab reclab $$53 expr $$54 THEN statements $$55 ELSE statements $$56 FI expr 
	lab: .    (58)

	.  reduce 58 (src line 302)

	lab  goto 129

state 107
	loop_statement:  FROM lab lab lab.lab lab reclab reclab $$59 expr $$60 DO block $$61 LOOP block UNTIL $$62 expr 
	lab: .    (58)

	.  reduce 58 (src line 302)

	lab  goto 130

state 108
	call_statement:  CALL IDENT reclab $$70.LPR args RPR 

	LPR  shift 131
	.  error


state 109
	par_statement:  PAR par_block par_more RAP.    (72)

	.  reduce 72 (src line 413)


state 110
	par_more:  COMMA par_block.par_more 
	par_more: .    (74)

	COMMA  shift 91
	.  reduce 74 (src line 428)

	par_more  goto 132

state 111
	block:  LCB $$23 statements $$24.RCB 

	RCB  shift 133
	.  error


state 112
	local_block:  LCB $$64 LOCAL INT.IDENT EQ reclab reclab $$65 expr $$66 statements DELOCAL INT IDENT EQ $$67 expr $$68 RCB 

	IDENT  shift 134
	.  error


state 113
	globvardecl:  INT IDENT LSB variable RSB.    (11)

	.  reduce 11 (src line 77)


state 114
	variable:  IDENT LSB.expr RSB 

	NUM  shift 96
	IDENT  shift 97
	LPR  shift 122
	.  error

	variable  goto 121
	expr  goto 135
	expr2  goto 116
	expr3  goto 117
	expr4  goto 118
	expr5  goto 119
	expr6  goto 120

state 115
	assign_statement:  IDENT PLUS EQ $$39 expr.    (40)
	expr:  expr.OR expr2 

	OR  shift 136
	.  reduce 40 (src line 174)


state 116
	expr:  expr2.    (85)
	expr2:  expr2.AND expr3 

	AND  shift 137
	.  reduce 85 (src line 483)


state 117
	expr2:  expr3.    (87)
	expr3:  expr3.LEQ expr4 
	expr3:  expr3.GEQ expr4 
	expr3:  expr3.EQ expr4 
	expr3:  expr3.NEQ expr4 
	expr3:  expr3.LES expr4 
	expr3:  expr3.GRT expr4 

	LEQ  shift 138
	GEQ  shift 139
	NEQ  shift 141
	EQ  shift 140
	LES  shift 142
	GRT  shift 143
	.  reduce 87 (src line 496)


state 118
	expr3:  expr4.    (89)
	expr4:  expr4.PLUS expr5 
	expr4:  expr4.MINUS expr5 
	expr4:  expr4.BITOR expr5 
	expr4:  expr4.XOR expr5 

	PLUS  shift 144
	MINUS  shift 145
	XOR  shift 147
	BITOR  shift 146
	.  reduce 89 (src line 510)


state 119
	expr4:  expr5.    (96)
	expr5:  expr5.MULT expr6 
	expr5:  expr5.DIV expr6 
	expr5:  expr5.MOD expr6 
	expr5:  expr5.BITAND expr6 

	MULT  shift 148
	DIV  shift 149
	MOD  shift 150
	BITAND  shift 151
	.  reduce 96 (src line 568)


state 120
	expr5:  expr6.    (101)

	.  reduce 101 (src line 600)


state 121
	expr6:  variable.    (106)

	.  reduce 106 (src line 633)


state 122
	expr6:  LPR.expr RPR 

	NUM  shift 96
	IDENT  shift 97
	LPR  shift 122
	.  error

	variable  goto 121
	expr  goto 152
	expr2  goto 116
	expr3  goto 117
	expr4  goto 118
	expr5  goto 119
	expr6  goto 120

state 123
	assign_statement:  IDENT MINUS EQ $$41 expr.    (42)
	expr:  expr.OR expr2 

	OR  shift 136
	.  reduce 42 (src line 187)


state 124
	assign_statement:  IDENT XOR EQ $$43 expr.    (44)
	expr:  expr.OR expr2 

	OR  shift 136
	.  reduce 44 (src line 200)


state 125
	arrentry:  IDENT LSB reclab $$45 expr.RSB 
	expr:  expr.OR expr2 

	OR  shift 136
	RSB  shift 153
	.  error


state 126
	arrassign_statement:  arrentry PLUS EQ $$47 expr.    (48)
	expr:  expr.OR expr2 

	OR  shift 136
	.  reduce 48 (src line 226)


state 127
	arrassign_statement:  arrentry MINUS EQ $$49 expr.    (50)
	expr:  expr.OR expr2 

	OR  shift 136
	.  reduce 50 (src line 239)


state 128
	arrassign_statement:  arrentry XOR EQ $$51 expr.    (52)
	expr:  expr.OR expr2 

	OR  shift 136
	.  reduce 52 (src line 252)


state 129
	if_statement:  IF lab lab lab lab.reclab reclab $$53 expr $$54 THEN statements $$55 ELSE statements $$56 FI expr 
	reclab: .    (84)

	.  reduce 84 (src line 478)

	reclab  goto 154

state 130
	loop_statement:  FROM lab lab lab lab.lab reclab reclab $$59 expr $$60 DO block $$61 LOOP block UNTIL $$62 expr 
	lab: .    (58)

	.  reduce 58 (src line 302)

	lab  goto 155

state 131
	call_statement:  CALL IDENT reclab $$70 LPR.args RPR 
	args: .    (78)

	IDENT  shift 158
	.  reduce 78 (src line 450)

	args  goto 156
	arg  goto 157

state 132
	par_more:  COMMA par_block par_more.    (73)

	.  reduce 73 (src line 427)


state 133
	block:  LCB $$23 statements $$24 RCB.    (25)

	.  reduce 25 (src line 151)


state 134
	local_block:  LCB $$64 LOCAL INT IDENT.EQ reclab reclab $$65 expr $$66 statements DELOCAL INT IDENT EQ $$67 expr $$68 RCB 

	EQ  shift 159
	.  error


state 135
	expr:  expr.OR expr2 
	variable:  IDENT LSB expr.RSB 

	OR  shift 136
	RSB  shift 160
	.  error


state 136
	expr:  expr OR.expr2 

	NUM  shift 96
	IDENT  shift 97
	LPR  shift 122
	.  error

	variable  goto 121
	expr2  goto 161
	expr3  goto 117
	expr4  goto 118
	expr5  goto 119
	expr6  goto 120

state 137
	expr2:  expr2 AND.expr3 

	NUM  shift 96
	IDENT  shift 97
	LPR  shift 122
	.  error

	variable  goto 121
	expr3  goto 162
	expr4  goto 118
	expr5  goto 119
	expr6  goto 120

state 138
	expr3:  expr3 LEQ.expr4 

	NUM  shift 96
	IDENT  shift 97
	LPR  shift 122
	.  error

	variable  goto 121
	expr4  goto 163
	expr5  goto 119
	expr6  goto 120

state 139
	expr3:  expr3 GEQ.expr4 

	NUM  shift 96
	IDENT  shift 97
	LPR  shift 122
	.  error

	variable  goto 121
	expr4  goto 164
	expr5  goto 119
	expr6  goto 120

state 140
	expr3:  expr3 EQ.expr4 

	NUM  shift 96
	IDENT  shift 97
	LPR  shift 122
	.  error

	variable  goto 121
	expr4  goto 165
	expr5  goto 119
	expr6  goto 120

state 141
	expr3:  expr3 NEQ.expr4 

	NUM  shift 96
	IDENT  shift 97
	LPR  shift 122
	.  error

	variable  goto 121
	expr4  goto 166
	expr5  goto 119
	expr6  goto 120

state 142
	expr3:  expr3 LES.expr4 

	NUM  shift 96
	IDENT  shift 97
	LPR  shift 122
	.  error

	variable  goto 121
	expr4  goto 167
	expr5  goto 119
	expr6  goto 120

state 143
	expr3:  expr3 GRT.expr4 

	NUM  shift 96
	IDENT  shift 97
	LPR  shift 122
	.  error

	variable  goto 121
	expr4  goto 168
	expr5  goto 119
	expr6  goto 120

state 144
	expr4:  expr4 PLUS.expr5 

	NUM  shift 96
	IDENT  shift 97
	LPR  shift 122
	.  error

	variable  goto 121
	expr5  goto 169
	expr6  goto 120

state 145
	expr4:  expr4 MINUS.expr5 

	NUM  shift 96
	IDENT  shift 97
	LPR  shift 122
	.  error

	variable  goto 121
	expr5  goto 170
	expr6  goto 120

state 146
	expr4:  expr4 BITOR.expr5 

	NUM  shift 96
	IDENT  shift 97
	LPR  shift 122
	.  error

	variable  goto 121
	expr5  goto 171
	expr6  goto 120

state 147
	expr4:  expr4 XOR.expr5 

	NUM  shift 96
	IDENT  shift 97
	LPR  shift 122
	.  error

	variable  goto 121
	expr5  goto 172
	expr6  goto 120

state 148
	expr5:  expr5 MULT.expr6 

	NUM  shift 96
	IDENT  shift 97
	LPR  shift 122
	.  error

	variable  goto 121
	expr6  goto 173

state 149
	expr5:  expr5 DIV.expr6 

	NUM  shift 96
	IDENT  shift 97
	LPR  shift 122
	.  error

	variable  goto 121
	expr6  goto 174

state 150
	expr5:  expr5 MOD.expr6 

	NUM  shift 96
	IDENT  shift 97
	LPR  shift 122
	.  error

	variable  goto 121
	expr6  goto 175

state 151
	expr5:  expr5 BITAND.expr6 

	NUM  shift 96
	IDENT  shift 97
	LPR  shift 122
	.  error

	variable  goto 121
	expr6  goto 176

state 152
	expr:  expr.OR expr2 
	expr6:  LPR expr.RPR 

	OR  shift 136
	RPR  shift 177
	.  error


state 153
	arrentry:  IDENT LSB reclab $$45 expr RSB.    (46)

	.  reduce 46 (src line 213)


state 154
	if_statement:  IF lab lab lab lab reclab.reclab $$53 expr $$54 THEN statements $$55 ELSE statements $$56 FI expr 
	reclab: .    (84)

	.  reduce 84 (src line 478)

	reclab  goto 178

state 155
	loop_statement:  FROM lab lab lab lab lab.reclab reclab $$59 expr $$60 DO block $$61 LOOP block UNTIL $$62 expr 
	reclab: .    (84)

	.  reduce 84 (src line 478)

	reclab  goto 179

state 156
	call_statement:  CALL IDENT reclab $$70 LPR args.RPR 

	RPR  shift 180
	.  error


state 157
	args:  arg.argmore 
	argmore: .    (80)

	COMMA  shift 182
	.  reduce 80 (src line 454)

	argmore  goto 181

state 158
	arg:  IDENT.    (81)

	.  reduce 81 (src line 456)


state 159
	local_block:  LCB $$64 LOCAL INT IDENT EQ.reclab reclab $$65 expr $$66 statements DELOCAL INT IDENT EQ $$67 expr $$68 RCB 
	reclab: .    (84)

	.  reduce 84 (src line 478)

	reclab  goto 183

state 160
	variable:  IDENT LSB expr RSB.    (110)

	.  reduce 110 (src line 654)


state 161
	expr:  expr OR expr2.    (86)
	expr2:  expr2.AND expr3 

	AND  shift 137
	.  reduce 86 (src line 487)


state 162
	expr2:  expr2 AND expr3.    (88)
	expr3:  expr3.LEQ expr4 
	expr3:  expr3.GEQ expr4 
	expr3:  expr3.EQ expr4 
	expr3:  expr3.NEQ expr4 
	expr3:  expr3.LES expr4 
	expr3:  expr3.GRT expr4 

	LEQ  shift 138
	GEQ  shift 139
	NEQ  shift 141
	EQ  shift 140
	LES  shift 142
	GRT  shift 143
	.  reduce 88 (src line 500)


state 163
	expr3:  expr3 LEQ expr4.    (90)
	expr4:  expr4.PLUS expr5 
	expr4:  expr4.MINUS expr5 
	expr4:  expr4.BITOR expr5 
	expr4:  expr4.XOR expr5 

	PLUS  shift 144
	MINUS  shift 145
	XOR  shift 147
	BITOR  shift 146
	.  reduce 90 (src line 514)


state 164
	expr3:  expr3 GEQ expr4.    (91)
	expr4:  expr4.PLUS expr5 
	expr4:  expr4.MINUS expr5 
	expr4:  expr4.BITOR expr5 
	expr4:  expr4.XOR expr5 

	PLUS  shift 144
	MINUS  shift 145
	XOR  shift 147
	BITOR  shift 146
	.  reduce 91 (src line 523)


state 165
	expr3:  expr3 EQ expr4.    (92)
	expr4:  expr4.PLUS expr5 
	expr4:  expr4.MINUS expr5 
	expr4:  expr4.BITOR expr5 
	expr4:  expr4.XOR expr5 

	PLUS  shift 144
	MINUS  shift 145
	XOR  shift 147
	BITOR  shift 146
	.  reduce 92 (src line 532)


state 166
	expr3:  expr3 NEQ expr4.    (93)
	expr4:  expr4.PLUS expr5 
	expr4:  expr4.MINUS expr5 
	expr4:  expr4.BITOR expr5 
	expr4:  expr4.XOR expr5 

	PLUS  shift 144
	MINUS  shift 145
	XOR  shift 147
	BITOR  shift 146
	.  reduce 93 (src line 541)


state 167
	expr3:  expr3 LES expr4.    (94)
	expr4:  expr4.PLUS expr5 
	expr4:  expr4.MINUS expr5 
	expr4:  expr4.BITOR expr5 
	expr4:  expr4.XOR expr5 

	PLUS  shift 144
	MINUS  shift 145
	XOR  shift 147
	BITOR  shift 146
	.  reduce 94 (src line 550)


state 168
	expr3:  expr3 GRT expr4.    (95)
	expr4:  expr4.PLUS expr5 
	expr4:  expr4.MINUS expr5 
	expr4:  expr4.BITOR expr5 
	expr4:  expr4.XOR expr5 

	PLUS  shift 144
	MINUS  shift 145
	XOR  shift 147
	BITOR  shift 146
	.  reduce 95 (src line 559)


state 169
	expr4:  expr4 PLUS expr5.    (97)
	expr5:  expr5.MULT expr6 
	expr5:  expr5.DIV expr6 
	expr5:  expr5.MOD expr6 
	expr5:  expr5.BITAND expr6 

	MULT  shift 148
	DIV  shift 149
	MOD  shift 150
	BITAND  shift 151
	.  reduce 97 (src line 572)


state 170
	expr4:  expr4 MINUS expr5.    (98)
	expr5:  expr5.MULT expr6 
	expr5:  expr5.DIV expr6 
	expr5:  expr5.MOD expr6 
	expr5:  expr5.BITAND expr6 

	MULT  shift 148
	DIV  shift 149
	MOD  shift 150
	BITAND  shift 151
	.  reduce 98 (src line 581)


state 171
	expr4:  expr4 BITOR expr5.    (99)
	expr5:  expr5.MULT expr6 
	expr5:  expr5.DIV expr6 
	expr5:  expr5.MOD expr6 
	expr5:  expr5.BITAND expr6 

	MULT  shift 148
	DIV  shift 149
	MOD  shift 150
	BITAND  shift 151
	.  reduce 99 (src line 590)


state 172
	expr4:  expr4 XOR expr5.    (100)
	expr5:  expr5.MULT expr6 
	expr5:  expr5.DIV expr6 
	expr5:  expr5.MOD expr6 
	expr5:  expr5.BITAND expr6 

	MULT  shift 148
	DIV  shift 149
	MOD  shift 150
	BITAND  shift 151
	.  reduce 100 (src line 591)


state 173
	expr5:  expr5 MULT expr6.    (102)

	.  reduce 102 (src line 604)


state 174
	expr5:  expr5 DIV expr6.    (103)

	.  reduce 103 (src line 613)


state 175
	expr5:  expr5 MOD expr6.    (104)

	.  reduce 104 (src line 622)


state 176
	expr5:  expr5 BITAND expr6.    (105)

	.  reduce 105 (src line 631)


state 177
	expr6:  LPR expr RPR.    (107)

	.  reduce 107 (src line 637)


state 178
	if_statement:  IF lab lab lab lab reclab reclab.$$53 expr $$54 THEN statements $$55 ELSE statements $$56 FI expr 
	$$53: .    (53)

	.  reduce 53 (src line 260)

	$$53  goto 184

state 179
	loop_statement:  FROM lab lab lab lab lab reclab.reclab $$59 expr $$60 DO block $$61 LOOP block UNTIL $$62 expr 
	reclab: .    (84)

	.  reduce 84 (src line 478)

	reclab  goto 185

state 180
	call_statement:  CALL IDENT reclab $$70 LPR args RPR.    (71)

	.  reduce 71 (src line 402)


state 181
	args:  arg argmore.    (77)

	.  reduce 77 (src line 449)


state 182
	argmore:  COMMA.arg argmore 

	IDENT  shift 158
	.  error

	arg  goto 186

state 183
	local_block:  LCB $$64 LOCAL INT IDENT EQ reclab.reclab $$65 expr $$66 statements DELOCAL INT IDENT EQ $$67 expr $$68 RCB 
	reclab: .    (84)

	.  reduce 84 (src line 478)

	reclab  goto 187

state 184
	if_statement:  IF lab lab lab lab reclab reclab $$53.expr $$54 THEN statements $$55 ELSE statements $$56 FI expr 

	NUM  shift 96
	IDENT  shift 97
	LPR  shift 122
	.  error

	variable  goto 121
	expr  goto 188
	expr2  goto 116
	expr3  goto 117
	expr4  goto 118
	expr5  goto 119
	expr6  goto 120

state 185
	loop_statement:  FROM lab lab lab lab lab reclab reclab.$$59 expr $$60 DO block $$61 LOOP block UNTIL $$62 expr 
	$$59: .    (59)

	.  reduce 59 (src line 309)

	$$59  goto 189

state 186
	argmore:  COMMA arg.argmore 
	argmore: .    (80)

	COMMA  shift 182
	.  reduce 80 (src line 454)

	argmore  goto 190

state 187
	local_block:  LCB $$64 LOCAL INT IDENT EQ reclab reclab.$$65 expr $$66 statements DELOCAL INT IDENT EQ $$67 expr $$68 RCB 
	$$65: .    (65)

	.  reduce 65 (src line 360)

	$$65  goto 191

state 188
	if_statement:  IF lab lab lab lab reclab reclab $$53 expr.$$54 THEN statements $$55 ELSE statements $$56 FI expr 
	expr:  expr.OR expr2 
	$$54: .    (54)

	OR  shift 136
	.  reduce 54 (src line 266)

	$$54  goto 192

state 189
	loop_statement:  FROM lab lab lab lab lab reclab reclab $$59.expr $$60 DO block $$61 LOOP block UNTIL $$62 expr 

	NUM  shift 96
	IDENT  shift 97
	LPR  shift 122
	.  error

	variable  goto 121
	expr  goto 193
	expr2  goto 116
	expr3  goto 117
	expr4  goto 118
	expr5  goto 119
	expr6  goto 120

state 190
	argmore:  COMMA arg argmore.    (79)

	.  reduce 79 (src line 453)


state 191
	local_block:  LCB $$64 LOCAL INT IDENT EQ reclab reclab $$65.expr $$66 statements DELOCAL INT IDENT EQ $$67 expr $$68 RCB 

	NUM  shift 96
	IDENT  shift 97
	LPR  shift 122
	.  error

	variable  goto 121
	expr  goto 194
	expr2  goto 116
	expr3  goto 117
	expr4  goto 118
	expr5  goto 119
	expr6  goto 120

state 192
	if_statement:  IF lab lab lab lab reclab reclab $$53 expr $$54.THEN statements $$55 ELSE statements $$56 FI expr 

	THEN  shift 195
	.  error


state 193
	loop_statement:  FROM lab lab lab lab lab reclab reclab $$59 expr.$$60 DO block $$61 LOOP block UNTIL $$62 expr 
	expr:  expr.OR expr2 
	$$60: .    (60)

	OR  shift 136
	.  reduce 60 (src line 315)

	$$60  goto 196

state 194
	local_block:  LCB $$64 LOCAL INT IDENT EQ reclab reclab $$65 expr.$$66 statements DELOCAL INT IDENT EQ $$67 expr $$68 RCB 
	expr:  expr.OR expr2 
	$$66: .    (66)

	OR  shift 136
	.  reduce 66 (src line 366)

	$$66  goto 197

state 195
	if_statement:  IF lab lab lab lab reclab reclab $$53 expr $$54 THEN.statements $$55 ELSE statements $$56 FI expr 
	statements: .    (28)

	IDENT  shift 47
	LCB  shift 53
	IF  shift 49
	FROM  shift 50
	CALL  shift 51
	PAR  shift 52
	SKIP  shift 43
	P  shift 56
	V  shift 55
	.  reduce 28 (src line 155)

	arrentry  goto 48
	statements  goto 198
	block  goto 44
	local_block  goto 54
	statement  goto 36
	assign_statement  goto 37
	arrassign_statement  goto 38
	if_statement  goto 39
	loop_statement  goto 40
	call_statement  goto 41
	par_statement  goto 42
	v_statement  goto 45
	p_statement  goto 46

state 196
	loop_statement:  FROM lab lab lab lab lab reclab reclab $$59 expr $$60.DO block $$61 LOOP block UNTIL $$62 expr 

	DO  shift 199
	.  error


state 197
	local_block:  LCB $$64 LOCAL INT IDENT EQ reclab reclab $$65 expr $$66.statements DELOCAL INT IDENT EQ $$67 expr $$68 RCB 
	statements: .    (28)

	IDENT  shift 47
	LCB  shift 53
	IF  shift 49
	FROM  shift 50
	CALL  shift 51
	PAR  shift 52
	SKIP  shift 43
	P  shift 56
	V  shift 55
	.  reduce 28 (src line 155)

	arrentry  goto 48
	statements  goto 200
	block  goto 44
	local_block  goto 54
	statement  goto 36
	assign_statement  goto 37
	arrassign_statement  goto 38
	if_statement  goto 39
	loop_statement  goto 40
	call_statement  goto 41
	par_statement  goto 42
	v_statement  goto 45
	p_statement  goto 46

state 198
	if_statement:  IF lab lab lab lab reclab reclab $$53 expr $$54 THEN statements.$$55 ELSE statements $$56 FI expr 
	$$55: .    (55)

	.  reduce 55 (src line 276)

	$$55  goto 201

state 199
	loop_statement:  FROM lab lab lab lab lab reclab reclab $$59 expr $$60 DO.block $$61 LOOP block UNTIL $$62 expr 

	LCB  shift 53
	.  error

	block  goto 202
	local_block  goto 54

state 200
	local_block:  LCB $$64 LOCAL INT IDENT EQ reclab reclab $$65 expr $$66 statements.DELOCAL INT IDENT EQ $$67 expr $$68 RCB 

	DELOCAL  shift 203
	.  error


state 201
	if_statement:  IF lab lab lab lab reclab reclab $$53 expr $$54 THEN statements $$55.ELSE statements $$56 FI expr 

	ELSE  shift 204
	.  error


state 202
	loop_statement:  FROM lab lab lab lab lab reclab reclab $$59 expr $$60 DO block.$$61 LOOP block UNTIL $$62 expr 
	$$61: .    (61)

	.  reduce 61 (src line 325)

	$$61  goto 205

state 203
	local_block:  LCB $$64 LOCAL INT IDENT EQ reclab reclab $$65 expr $$66 statements DELOCAL.INT IDENT EQ $$67 expr $$68 RCB 

	INT  shift 206
	.  error


state 204
	if_statement:  IF lab lab lab lab reclab reclab $$53 expr $$54 THEN statements $$55 ELSE.statements $$56 FI expr 
	statements: .    (28)

	IDENT  shift 47
	LCB  shift 53
	IF  shift 49
	FROM  shift 50
	CALL  shift 51
	PAR  shift 52
	SKIP  shift 43
	P  shift 56
	V  shift 55
	.  reduce 28 (src line 155)

	arrentry  goto 48
	statements  goto 207
	block  goto 44
	local_block  goto 54
	statement  goto 36
	assign_statement  goto 37
	arrassign_statement  goto 38
	if_statement  goto 39
	loop_statement  goto 40
	call_statement  goto 41
	par_statement  goto 42
	v_statement  goto 45
	p_statement  goto 46

state 205
	loop_statement:  FROM lab lab lab lab lab reclab reclab $$59 expr $$60 DO block $$61.LOOP block UNTIL $$62 expr 

	LOOP  shift 208
	.  error


state 206
	local_block:  LCB $$64 LOCAL INT IDENT EQ reclab reclab $$65 expr $$66 statements DELOCAL INT.IDENT EQ $$67 expr $$68 RCB 

	IDENT  shift 209
	.  error


state 207
	if_statement:  IF lab lab lab lab reclab reclab $$53 expr $$54 THEN statements $$55 ELSE statements.$$56 FI expr 
	$$56: .    (56)

	.  reduce 56 (src line 285)

	$$56  goto 210

state 208
	loop_statement:  FROM lab lab lab lab lab reclab reclab $$59 expr $$60 DO block $$61 LOOP.block UNTIL $$62 expr 

	LCB  shift 53
	.  error

	block  goto 211
	local_block  goto 54

state 209
	local_block:  LCB $$64 LOCAL INT IDENT EQ reclab reclab $$65 expr $$66 statements DELOCAL INT IDENT.EQ $$67 expr $$68 RCB 

	EQ  shift 212
	.  error


state 210
	if_statement:  IF lab lab lab lab reclab reclab $$53 expr $$54 THEN statements $$55 ELSE statements $$56.FI expr 

	FI  shift 213
	.  error


state 211
	loop_statement:  FROM lab lab lab lab lab reclab reclab $$59 expr $$60 DO block $$61 LOOP block.UNTIL $$62 expr 

	UNTIL  shift 214
	.  error


state 212
	local_block:  LCB $$64 LOCAL INT IDENT EQ reclab reclab $$65 expr $$66 statements DELOCAL INT IDENT EQ.$$67 expr $$68 RCB 
	$$67: .    (67)

	.  reduce 67 (src line 375)

	$$67  goto 215

state 213
	if_statement:  IF lab lab lab lab reclab reclab $$53 expr $$54 THEN statements $$55 ELSE statements $$56 FI.expr 

	NUM  shift 96
	IDENT  shift 97
	LPR  shift 122
	.  error

	variable  goto 121
	expr  goto 216
	expr2  goto 116
	expr3  goto 117
	expr4  goto 118
	expr5  goto 119
	expr6  goto 120

state 214
	loop_statement:  FROM lab lab lab lab lab reclab reclab $$59 expr $$60 DO block $$61 LOOP block UNTIL.$$62 expr 
	$$62: .    (62)

	.  reduce 62 (src line 333)

	$$62  goto 217

state 215
	local_block:  LCB $$64 LOCAL INT IDENT EQ reclab reclab $$65 expr $$66 statements DELOCAL INT IDENT EQ $$67.expr $$68 RCB 

	NUM  shift 96
	IDENT  shift 97
	LPR  shift 122
	.  error

	variable  goto 121
	expr  goto 218
	expr2  goto 116
	expr3  goto 117
	expr4  goto 118
	expr5  goto 119
	expr6  goto 120

state 216
	if_statement:  IF lab lab lab lab reclab reclab $$53 expr $$54 THEN statements $$55 ELSE statements $$56 FI expr.    (57)
	expr:  expr.OR expr2 

	OR  shift 136
	.  reduce 57 (src line 293)


state 217
	loop_statement:  FROM lab lab lab lab lab reclab reclab $$59 expr $$60 DO block $$61 LOOP block UNTIL $$62.expr 

	NUM  shift 96
	IDENT  shift 97
	LPR  shift 122
	.  error

	variable  goto 121
	expr  goto 219
	expr2  goto 116
	expr3  goto 117
	expr4  goto 118
	expr5  goto 119
	expr6  goto 120

state 218
	local_block:  LCB $$64 LOCAL INT IDENT EQ reclab reclab $$65 expr $$66 statements DELOCAL INT IDENT EQ $$67 expr.$$68 RCB 
	expr:  expr.OR expr2 
	$$68: .    (68)

	OR  shift 136
	.  reduce 68 (src line 381)

	$$68  goto 220

state 219
	loop_statement:  FROM lab lab lab lab lab reclab reclab $$59 expr $$60 DO block $$61 LOOP block UNTIL $$62 expr.    (63)
	expr:  expr.OR expr2 

	OR  shift 136
	.  reduce 63 (src line 342)


state 220
	local_block:  LCB $$64 LOCAL INT IDENT EQ reclab reclab $$65 expr $$66 statements DELOCAL INT IDENT EQ $$67 expr $$68.RCB 

	RCB  shift 221
	.  error


state 221
	local_block:  LCB $$64 LOCAL INT IDENT EQ reclab reclab $$65 expr $$66 statements DELOCAL INT IDENT EQ $$67 expr $$68 RCB.    (69)

	.  reduce 69 (src line 392)


50 terminals, 68 nonterminals
111 grammar rules, 222/16000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
117 working sets used
memory: parser 359/240000
166 extra closures
308 shift entries, 2 exceptions
130 goto entries
201 entries saved by goto default
Optimizer space used: output 227/240000
227 table entries, 0 zero
maximum spread: 50, maximum offset: 217
